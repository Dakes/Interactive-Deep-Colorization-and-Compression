function count = get_color_map(theme_dir, index_dir, save_dir)
    % theme_dir: the rgb global inputs
    % index_dir: the index map that generated by getGlobalInputs.m
    count = 0;
    theme_files = dir(theme_dir);
    index_files = dir(index_dir);
    
    if length(theme_files) ~= length(index_files)
        disp('ori_dir和index_dir内文件数目不匹配');
        exit(-1);
    end
    
    for i = 1 : length(theme_files)
       theme_name = theme_files(i).name;
       index_name = index_files(i).name;
       
       if strcmp(theme_name, '.') || strcmp(index_name, '..')
           continue;
       end
       
       if theme_files(i).isdir
          theme_path = [theme_dir, theme_name, '\'];
          index_path = [index_dir, index_name, '\'];
          fprintf('正在生成\n%s\n%s\n', theme_path, index_path);
          count = count + get_color_map(theme_path, index_path, save_dir);
       else
           theme = imread([theme_dir, theme_name]);
           index = imread([index_dir, index_name]);
           max_index = max(index(:));
           color_map = colorize_index_map(theme, index, max_index);
           
           class_name = split(theme_dir, 'color_theme');
           class_name = char(class_name(end));  
           map_path = [save_dir, 'color_map\', class_name];
           
           if ~exist(map_path, 'dir')
              mkdir(map_path);
           end
           
           file_name = split(theme_name, '.');
           file_name = [char(file_name(1)), '.png'];
           
           imwrite(color_map, [map_path, '\', file_name]);
           
           count = count + 1;
       end
    end
end